name: Nightly

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make

      - name: Run check
        run: cargo make check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
          profile: minimal

      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make

      - name: Run clippy
        run: cargo make clippy 

  tests:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        database: [postgres, mysql, mariadb, mssql]
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make

      - name: Tests
        run: cargo make ${{ matrix.database }}

  docker:
    needs: [tests, clippy, check]
    name: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Login into repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/onelitefeathernet/feedback-fusion:nightly
