import{_ as t,c as a,a1 as o,o as d}from"./chunks/framework.aLAkT6Ny.js";const b=JSON.parse('{"title":"Caching","description":"","frontmatter":{},"headers":[],"relativePath":"docs/caching.md","filePath":"docs/caching.md"}'),r={name:"docs/caching.md"};function i(c,e,n,s,l,h){return d(),a("div",null,e[0]||(e[0]=[o('<h1 id="caching" tabindex="-1">Caching <a class="header-anchor" href="#caching" aria-label="Permalink to &quot;Caching&quot;">​</a></h1><h2 id="background" tabindex="-1">Background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;Background&quot;">​</a></h2><p>Feedback-Fusion is able to cache often used data, which is espacially used on public endpoints (the endpoints where the clients send their feedback to).</p><p>The cached data persists of different database requests required to process a single prompt response. Utilizing this cache functionality we can provide a slightly better performance under load as we do not need that much database requests.</p><h2 id="caching-variants" tabindex="-1">Caching variants <a class="header-anchor" href="#caching-variants" aria-label="Permalink to &quot;Caching variants&quot;">​</a></h2><p>Feedback fusion supports <strong>2 types</strong> of caching:</p><ul><li><strong>Memory caching:</strong> the entire cache is hold in the server memory, therefore we cant work with multiple server instances here</li><li><strong>Distributed caching:</strong> here we utilize the speed of the <strong>Skytable Database</strong>. The Skytable database stores all of our cache data and all instances can update / refresh this cache at all time.</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="memory" tabindex="-1">Memory <a class="header-anchor" href="#memory" aria-label="Permalink to &quot;Memory&quot;">​</a></h3><p>If you use the default provided image it is automatically enabled.</p><h3 id="skytable" tabindex="-1">Skytable <a class="header-anchor" href="#skytable" aria-label="Permalink to &quot;Skytable&quot;">​</a></h3><h4 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h4><ul><li>A fully configured Skytable database. <a href="https://docs.skytable.io/installation" target="_blank" rel="noreferrer">Setup a skytable database</a></li></ul><h4 id="values" tabindex="-1">Values <a class="header-anchor" href="#values" aria-label="Permalink to &quot;Values&quot;">​</a></h4><p>If you set the following values feedback-fusion will automatically enable distributed caching via skytable</p><table tabindex="0"><thead><tr><th>Environment Variable</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>skytable_host</code></td><td><code>Option&lt;String&gt;</code></td><td><code>None</code></td><td>The hostname or IP address of the Skytable server</td></tr><tr><td><code>skytable_port</code></td><td><code>Option&lt;u16&gt;</code></td><td><code>None</code></td><td>The port on which the Skytable server is running</td></tr><tr><td><code>skytable_certificate</code></td><td><code>Option&lt;String&gt;</code></td><td><code>None</code></td><td>The Skytable servers ca certificate</td></tr><tr><td><code>skytable_username</code></td><td><code>Option&lt;String&gt;</code></td><td><code>None</code></td><td>The username for authentication</td></tr><tr><td><code>skytable_password</code></td><td><code>Option&lt;String&gt;</code></td><td><code>None</code></td><td>The password for authentication</td></tr><tr><td><code>skytable_space</code></td><td><code>String</code></td><td><code>&quot;cache&quot;</code></td><td>The skytable space to use</td></tr><tr><td><code>skytable_model</code></td><td><code>String</code></td><td><code>&quot;feedbackfusion&quot;</code></td><td>The skytable model to use</td></tr></tbody></table>',16)]))}const p=t(r,[["render",i]]);export{b as __pageData,p as default};
