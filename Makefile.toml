# Setup

[config]
skip_core_tasks = true

# lib dev

[tasks.pnpm]
cwd = "./lib"
command = "pnpm"
args = ["i"]

[tasks.core_generate]
dependencies = ["pnpm"]
cwd = "./lib/"
command = "pnpm"
args = ["run", "protoc"]

[tasks.docs]
dependencies = ["core_generate"]
cwd = "./lib"
command = "pnpm"
args = ["run", "dev"]

[tasks.lib_build]
dependencies = ["core_generate"]
cwd = "./lib"
command = "pnpm"
args = ["run", "tsc"]

[tasks.docs_build]
dependencies = ["lib_build"]
cwd = "./docs"
command = "pnpm"
args = ["run", "docs:build"]

[tasks.extract_translations]
dependencies = ["pnpm"]
cwd = "./lib"
command = "pnpm"
args = ["run", "translations:extract"]

[tasks.build_translations]
dependencies = ["pnpm"]
cwd = "./lib"
command = "pnpm"
args = ["run", "translations:build"]

# linting

[tasks.check]
command = "cargo"
args = ["check", "--features", "all-databases"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--features", "all-databases", "--", "-D", "warnings"]

[tasks.unittest]
command = "cargo"
args = ["test", "--bin", "feedback-fusion"]

[tasks.docker_network]
command = "docker"
args = ["network", "create", "feedback-fusion"]

# run oidc server for integration tests
[tasks.oidc-server-mock]
dependencies = ["docker_network"]
script = "docker compose -f tests/_common/oidc-mock/docker-compose.yaml up -d && sleep 5 && curl -s -o /dev/null http://localhost:5151/.well-known/openid-configuration"

[tasks.integration_test]
env = { OIDC_PROVIDER = "http://localhost:5151", OIDC_CLIENT_ID = "client", OIDC_CLIENT_SECRET = "secret", RUST_LOG = "INFO", GRPC_ENDPOINT = "http://localhost:8000" }
command = "cargo"
args = ["test", "--no-fail-fast", "--test", "integration_test"]

# Postgres
[tasks.postgres_database]
script = "docker run --name postgres -e POSTGRES_PASSWORD=password -e POSTGRES_USERNAME=postgres --network feedback-fusion -d postgres && sleep 1"

[tasks.postgres_backend]
script = '''
docker build -t feedback-fusion .
docker run --name feedback-fusion -d \
  -e POSTGRES_USERNAME=postgres \
  -e POSTGRES_PASSWORD=password \
  -e POSTGRES_DATABASE=postgres \
  -e POSTGRES_ENDPOINT=postgres:5432 \
  -e OIDC_PROVIDER=http://oidc-server-mock \
  -e OIDC_ISSUER=http://localhost:5151 \
  -e RUST_LOG=DEBUG \
  --network feedback-fusion -p 8000:8000 feedback-fusion
sleep 1
'''

[tasks.postgres]
run_task = { name = [
  "oidc-server-mock",
  "postgres_database",
  "postgres_backend",
  "integration_test",
], fork = true, cleanup_task = "postgres_cleanup" }

[tasks.postgres_cleanup]
script = "docker rm -f postgres;docker rm -f oidc-server-mock;docker rm -f feedback-fusion;docker network rm feedback-fusion"

# Mysql
[tasks.mysql_database]
script = '''
docker run --name mysql \
  -e MYSQL_ROOT_PASSWORD=password \
  -e MYSQL_PASSWORD=password \
  -e MYSQL_USER=username \
  -e MYSQL_DATABASE=database \
  --network feedback-fusion \
  -d mysql
sleep 30
'''

[tasks.mysql_backend]
script = '''
docker build -t feedback-fusion .
docker run --name feedback-fusion -d \
  -e MYSQL_USERNAME=username \
  -e MYSQL_PASSWORD=password \
  -e MYSQL_DATABASE=database \
  -e MYSQL_ENDPOINT=mysql:3306 \
  -e OIDC_PROVIDER=http://oidc-server-mock \
  -e OIDC_ISSUER=http://localhost:5151 \
  -e RUST_LOG=DEBUG \
  --network feedback-fusion -p 8000:8000 feedback-fusion
sleep 1
'''

[tasks.mysql]
run_task = { name = [
  "oidc-server-mock",
  "mysql_database",
  "mysql_backend",
  "integration_test",
], fork = true, cleanup_task = "mysql_cleanup" }

[tasks.mysql_cleanup]
script = "docker rm -f mysql;docker rm -f oidc-server-mock;docker rm -f feedback-fusion;docker network rm feedback-fusion"

# Maria
[tasks.mariadb_database]
script = '''
docker run --name mysql \
  -e MYSQL_ROOT_PASSWORD=password \
  -e MYSQL_PASSWORD=password \
  -e MYSQL_USER=username \
  -e MYSQL_DATABASE=database \
  --network feedback-fusion \
  -d mariadb
sleep 10
'''

[tasks.mariadb]
run_task = { name = [
  "oidc-server-mock",
  "mariadb_database",
  "mysql_backend",
  "integration_test",
], fork = true, cleanup_task = "mysql_cleanup" }

# Mssql
[tasks.mssql_database]
script = '''
docker run --name mssql \
  -e ACCEPT_EULA=Y \
  -e MSSQL_SA_PASSWORD=Password1 \
  --network feedback-fusion \
  -d mcr.microsoft.com/mssql/server:2022-latest
sleep 10
'''

[tasks.mssql_backend]
script = '''
docker build -t feedback-fusion .
docker run --name feedback-fusion -d \
  -e MSSQL_USERNAME=sa \
  -e MSSQL_PASSWORD=Password1 \
  -e MSSQL_DATABASE=master \
  -e MSSQL_ENDPOINT=mssql:1433 \
  -e OIDC_PROVIDER=http://oidc-server-mock \
  -e OIDC_ISSUER=http://localhost:5151 \
  -e RUST_LOG=DEBUG \
  --network feedback-fusion -p 8000:8000 feedback-fusion
sleep 1
'''

[tasks.mssql]
run_task = { name = [
  "oidc-server-mock",
  "mssql_database",
  "mssql_backend",
  "integration_test",
], fork = true, cleanup_task = "mssql_cleanup" }

[tasks.mssql_cleanup]
script = "docker rm -f mssql;docker rm -f oidc-server-mock;docker rm -f feedback-fusion;docker network rm feedback-fusion"

[tasks.integration]
run_task = { name = ["postgres", "mysql", "mssql", "mariadb"], fork = true }
