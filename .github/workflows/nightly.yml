name: Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"  

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: "" 

      - name: Checkout Sources
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v2

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run check
        run: just check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: "" 

      - name: Checkout Sources
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v2

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run clippy
        run: just clippy 

  tests:
    needs: [clippy, check]
    name: tests
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: "" 

      - name: Checkout Sources
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v2

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install FluvioCLI
        run: |
          curl -fsS https://hub.infinyon.cloud/install/install.sh | bash

      - name: Tests
        run: |
          export PATH=${PATH}:~/.fluvio/bin:~/.fvm/bin
          just test-all

  docker:
    needs: [tests]
    name: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Login into repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ghcr.io/onelitefeathernet/feedback-fusion:nightly

  dashboard:
    needs: [docker]
    name: dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Login into repository
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./dashboard/Dockerfile
          push: true
          tags: ghcr.io/onelitefeathernet/feedback-fusion-dashboard:nightly

  docs: 
    needs: [docker]
    name: docs 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v2
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Update paths 
        working-directory: docs/.vitepress
        run: |
          sed -i "s|/feedback-fusion/|/feedback-fusion/nightly/|g" config.ts
          sed -i "s|/feedback-fusion/|/feedback-fusion/nightly/|g" theme/index.ts

      - name: Build
        run: just docs

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/.vitepress/dist
          destination_dir: ./nightly
