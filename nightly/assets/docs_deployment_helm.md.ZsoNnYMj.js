import{_ as t,c as e,o as d,a3 as s}from"./chunks/framework.ByQB6g6e.js";const g=JSON.parse('{"title":"Deployment via Helm","description":"","frontmatter":{},"headers":[],"relativePath":"docs/deployment/helm.md","filePath":"docs/deployment/helm.md"}'),i={name:"docs/deployment/helm.md"},a=s(`<h1 id="deployment-via-helm" tabindex="-1">Deployment via Helm <a class="header-anchor" href="#deployment-via-helm" aria-label="Permalink to &quot;Deployment via Helm&quot;">â€‹</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">â€‹</a></h2><ul><li>Helm installed on your local machine. <a href="https://helm.sh/docs/intro/install/" target="_blank" rel="noreferrer">Install Helm</a></li><li>A running Kubernetes cluster. <a href="https://kubernetes.io/docs/setup/" target="_blank" rel="noreferrer">Set up a Kubernetes cluster</a></li><li>A running database of your choice. <a href="/feedback-fusion/nightly/docs/configuration.html#database-configuration">Supported Databases</a></li></ul><h2 id="adding-the-helm-repository" tabindex="-1">Adding the Helm Repository <a class="header-anchor" href="#adding-the-helm-repository" aria-label="Permalink to &quot;Adding the Helm Repository&quot;">â€‹</a></h2><p>First, add the <code>feedback-fusion</code> Helm repository to your local Helm client:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://onelitefeathernet.github.io/feedback-fusion/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">â€‹</a></h2><p>Before installing the chart, you need to create a Kubernetes secret named <code>feedback-fusion-config</code>. Refer to the <a href="/feedback-fusion/nightly/docs/configuration.html">configuration documentation</a> for the fields that need to be set.</p><h4 id="chart-configuration" tabindex="-1">Chart configuration <a class="header-anchor" href="#chart-configuration" aria-label="Permalink to &quot;Chart configuration&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th>Parameter</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>replicaCount</code></td><td>Number of replicas for the deployment</td><td><code>1</code></td></tr><tr><td><code>image.repository</code></td><td>Image repository</td><td><code>ghcr.io/onelitefeathernet/feedback-fusion</code></td></tr><tr><td><code>image.pullPolicy</code></td><td>Image pull policy</td><td><code>IfNotPresent</code></td></tr><tr><td><code>image.tag</code></td><td>Image tag (overrides the chart appVersion)</td><td><code>&quot;&quot;</code></td></tr><tr><td><code>imagePullSecrets</code></td><td>List of image pull secrets</td><td><code>[]</code></td></tr><tr><td><code>nameOverride</code></td><td>Override the name of the chart</td><td><code>&quot;&quot;</code></td></tr><tr><td><code>fullnameOverride</code></td><td>Override the full name of the chart</td><td><code>&quot;&quot;</code></td></tr><tr><td><code>serviceAccount.create</code></td><td>Specifies whether a service account should be created</td><td><code>true</code></td></tr><tr><td><code>serviceAccount.automount</code></td><td>Automatically mount a ServiceAccount&#39;s API credentials</td><td><code>true</code></td></tr><tr><td><code>serviceAccount.annotations</code></td><td>Annotations to add to the service account</td><td><code>{}</code></td></tr><tr><td><code>serviceAccount.name</code></td><td>The name of the service account to use</td><td><code>&quot;&quot;</code></td></tr><tr><td><code>podAnnotations</code></td><td>Annotations to add to the pod</td><td><code>{}</code></td></tr><tr><td><code>podLabels</code></td><td>Labels to add to the pod</td><td><code>{}</code></td></tr><tr><td><code>podSecurityContext</code></td><td>Security context for the pod</td><td><code>{}</code></td></tr><tr><td><code>securityContext</code></td><td>Security context for the container</td><td><code>{}</code></td></tr><tr><td><code>service.type</code></td><td>Type of service</td><td><code>ClusterIP</code></td></tr><tr><td><code>ingress.enabled</code></td><td>Enable ingress controller resource</td><td><code>false</code></td></tr><tr><td><code>ingress.className</code></td><td>Ingress class name</td><td><code>&quot;&quot;</code></td></tr><tr><td><code>ingress.annotations</code></td><td>Ingress annotations</td><td><code>{}</code></td></tr><tr><td><code>ingress.hosts</code></td><td>List of ingress hosts</td><td><code>[]</code></td></tr><tr><td><code>ingress.tls</code></td><td>List of TLS configurations for ingress</td><td><code>[]</code></td></tr><tr><td><code>resources</code></td><td>Resource requests and limits</td><td><code>{}</code></td></tr><tr><td><code>livenessProbe.grpc.port</code></td><td>GRPC port for liveness probe</td><td><code>8000</code></td></tr><tr><td><code>livenessProbe.periodSeconds</code></td><td>Period seconds for liveness probe</td><td><code>5</code></td></tr><tr><td><code>startupProbe.grpc.port</code></td><td>GRPC port for startup probe</td><td><code>8000</code></td></tr><tr><td><code>startupProbe.periodSeconds</code></td><td>Period seconds for startup probe</td><td><code>2</code></td></tr><tr><td><code>startupProbe.failureThreshold</code></td><td>Failure threshold for startup probe</td><td><code>10</code></td></tr><tr><td><code>volumes</code></td><td>Additional volumes for the deployment</td><td><code>[]</code></td></tr><tr><td><code>volumeMounts</code></td><td>Additional volume mounts for the deployment</td><td><code>[]</code></td></tr><tr><td><code>nodeSelector</code></td><td>Node selector for pod assignment</td><td><code>{}</code></td></tr><tr><td><code>tolerations</code></td><td>Tolerations for pod assignment</td><td><code>[]</code></td></tr><tr><td><code>affinity</code></td><td>Affinity settings for pod assignment</td><td><code>{}</code></td></tr><tr><td><code>feedbackFusion.preset.enabled</code></td><td>Enable preset configuration</td><td><code>false</code></td></tr><tr><td><code>feedbackFusion.preset.name</code></td><td>Name of the preset configuration</td><td><code>feedback-fusion-preset</code></td></tr><tr><td><code>feedbackFusion.preset.create</code></td><td>Create preset configuration</td><td><code>false</code></td></tr><tr><td><code>feedbackFusion.preset.data</code></td><td>Preset data</td><td><code>{}</code> <a href="/feedback-fusion/nightly/docs/configuration.html#presets">Preset configuration</a></td></tr><tr><td><code>feedbackFusion.config.secret</code></td><td>Name of the secret containing configuration</td><td><code>feedback-fusion-config</code></td></tr><tr><td><code>feedbackFusion.testSecret</code></td><td>Name of the secret containing configuration for the integration test</td><td><code>feedback-fusion-integration-test</code></td></tr></tbody></table><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">â€‹</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion/feedback-fusion</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --wait</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --atomic</span></span></code></pre></div><p>Your instance should now be up and running ðŸ˜ƒ</p><h2 id="verifying-deployment-with-helm-test" tabindex="-1">Verifying Deployment with Helm Test <a class="header-anchor" href="#verifying-deployment-with-helm-test" aria-label="Permalink to &quot;Verifying Deployment with Helm Test&quot;">â€‹</a></h2><p>To verify the deployment of the Helm chart, you can use the <code>helm test</code> command. However, before running the test, a secret must be created with the name <code>feedback-fusion-integration-test</code>. Alternatively, the name of another secret can be set via the Helm value <code>feedbackFusion.testSecret</code>.</p><p>The secret should contain the following values:</p><table tabindex="0"><thead><tr><th>Key</th><th>Description</th></tr></thead><tbody><tr><td>OIDC_PROVIDER</td><td>URL of the OIDC provider</td></tr><tr><td>OIDC_CLIENT_ID</td><td>The client ID</td></tr><tr><td>OIDC_CLIENT_SECRET</td><td>The client secret</td></tr><tr><td>GRPC_ENDPOINT</td><td>The endpoint of the deployed application</td></tr></tbody></table><h3 id="creating-the-secret" tabindex="-1">Creating the Secret <a class="header-anchor" href="#creating-the-secret" aria-label="Permalink to &quot;Creating the Secret&quot;">â€‹</a></h3><p>To create the secret, you can use the following <code>kubectl</code> command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">namespac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion-integration-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --from-literal=OIDC_PROVIDER=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oidc_provider_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --from-literal=OIDC_CLIENT_ID=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">client_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --from-literal=OIDC_CLIENT_SECRET=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">client_secret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --from-literal=GRPC_ENDPOINT=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grpc_endpoint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="run-the-tests" tabindex="-1">Run the tests <a class="header-anchor" href="#run-the-tests" aria-label="Permalink to &quot;Run the tests&quot;">â€‹</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">namespac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">releas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="on-finish" tabindex="-1">On finish <a class="header-anchor" href="#on-finish" aria-label="Permalink to &quot;On finish&quot;">â€‹</a></h3><p>You should now reset your database as the integration test does not delete everything it created.</p>`,24),o=[a];function n(r,c,l,h,p,k){return d(),e("div",null,o)}const f=t(i,[["render",n]]);export{g as __pageData,f as default};
