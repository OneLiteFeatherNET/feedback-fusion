import{i as W,d,E as _,t as ue,I as j,k as he,c as de,R as pe}from"./decorators.DM4TJmB_.js";function fe(e,t){const r=e.emit;if(r._isPiped)return;const s=function(i,...n){return t.emit(i,...n),r.call(this,i,...n)};s._isPiped=!0,e.emit=s}function ge(e){const t=[...e];return Object.freeze(t),t}class me{subscriptions=[];dispose(){let t;for(;t=this.subscriptions.shift();)t()}}class ye{constructor(t){this.initialHandlers=t,this.handlers=[...t]}handlers;prepend(t){this.handlers.unshift(...t)}reset(t){this.handlers=t.length>0?[...t]:[...this.initialHandlers]}currentHandlers(){return this.handlers}}class ve extends me{handlersController;emitter;publicEmitter;events;constructor(...t){super(),W(this.validateHandlers(t),d.formatMessage("Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?")),this.handlersController=new ye(t),this.emitter=new _,this.publicEmitter=new _,fe(this.emitter,this.publicEmitter),this.events=this.createLifeCycleEvents(),this.subscriptions.push(()=>{this.emitter.removeAllListeners(),this.publicEmitter.removeAllListeners()})}validateHandlers(t){return t.every(r=>!Array.isArray(r))}use(...t){W(this.validateHandlers(t),d.formatMessage('Failed to call "use()" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?')),this.handlersController.prepend(t)}restoreHandlers(){this.handlersController.currentHandlers().forEach(t=>{t.isUsed=!1})}resetHandlers(...t){this.handlersController.reset(t)}listHandlers(){return ge(this.handlersController.currentHandlers())}createLifeCycleEvents(){return{on:(...t)=>this.publicEmitter.on(...t),removeListener:(...t)=>this.publicEmitter.removeListener(...t),removeAllListeners:(...t)=>this.publicEmitter.removeAllListeners(...t)}}}var we=async e=>{try{return{error:null,data:await e().catch(r=>{throw r})}}catch(t){return{error:t,data:null}}};const be=async({request:e,requestId:t,handlers:r,resolutionContext:s})=>{let o=null,i=null;for(const n of r)if(i=await n.run({request:e,requestId:t,resolutionContext:s}),i!==null&&(o=n),i?.response)break;return o?{handler:o,parsedResult:i?.parsedResult,response:i?.response}:null};async function Ee(e,t="warn"){const r=new URL(e.url),s=ue(r)+r.search,o=`intercepted a request without a matching request handler:

  • ${e.method} ${s}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/getting-started/mocks`;function i(n){switch(n){case"error":throw d.error("Error: %s",o),new j(d.formatMessage('Cannot bypass a request when using the "error" strategy for the "onUnhandledRequest" option.'));case"warn":{d.warn("Warning: %s",o);break}case"bypass":break;default:throw new j(d.formatMessage('Failed to react to an unhandled request: unknown strategy "%s". Please provide one of the supported strategies ("bypass", "warn", "error") or a custom callback function as the value of the "onUnhandledRequest" option.',n))}}if(typeof t=="function"){t(e,{warning:i.bind(null,"warn"),error:i.bind(null,"error")});return}r.protocol!=="file:"&&i(t)}function Re(e,t){const r=Reflect.get(t,he);r&&de.setCookie(r,e.url)}async function K(e,t,r,s,o,i){if(o.emit("request:start",{request:e,requestId:t}),e.headers.get("x-msw-intention")==="bypass"){o.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}const n=await we(()=>be({request:e,requestId:t,handlers:r,resolutionContext:i?.resolutionContext}));if(n.error)throw o.emit("unhandledException",{error:n.error,request:e,requestId:t}),n.error;if(!n.data){await Ee(e,s.onUnhandledRequest),o.emit("request:unhandled",{request:e,requestId:t}),o.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}const{response:a}=n.data;if(!a){o.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}if(a.status===302&&a.headers.get("x-msw-intention")==="passthrough"){o.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}Re(e,a),o.emit("request:match",{request:e,requestId:t});const l=n.data,c=i?.transformResponse?.(a)||a;return i?.onMockedResponse?.(c,l),o.emit("request:end",{request:e,requestId:t}),c}function ke(e){return{status:e.status,statusText:e.statusText,headers:Object.fromEntries(e.headers.entries())}}function D(e){return e!=null&&typeof e=="object"&&!Array.isArray(e)}function V(e,t){return Object.entries(t).reduce((r,[s,o])=>{const i=r[s];return Array.isArray(i)&&Array.isArray(o)?(r[s]=i.concat(o),r):D(i)&&D(o)?(r[s]=V(i,o),r):(r[s]=o,r)},Object.assign({},e))}var qe={},Le=/(%?)(%([sdijo]))/g;function Se(e,t){switch(t){case"s":return e;case"d":case"i":return Number(e);case"j":return JSON.stringify(e);case"o":{if(typeof e=="string")return e;const r=JSON.stringify(e);return r==="{}"||r==="[]"||/^\[object .+?\]$/.test(r)?e:r}}}function q(e,...t){if(t.length===0)return e;let r=0,s=e.replace(Le,(o,i,n,a)=>{const l=t[r],c=Se(l,a);return i?o:(r++,c)});return r<t.length&&(s+=` ${t.slice(r).join(" ")}`),s=s.replace(/%{2,2}/g,"%"),s}var Te=2;function Pe(e){if(!e.stack)return;const t=e.stack.split(`
`);t.splice(1,Te),e.stack=t.join(`
`)}var xe=class extends Error{constructor(e,...t){super(e),this.message=e,this.name="Invariant Violation",this.message=q(e,...t),Pe(this)}},w=(e,t,...r)=>{if(!e)throw new xe(t,...r)};w.as=(e,t,r,...s)=>{if(!t){const o=s.length===0?r:q(r,s);let i;try{i=Reflect.construct(e,[o])}catch{i=e(o)}throw i}};function A(){if(typeof navigator<"u"&&navigator.product==="ReactNative")return!0;if(typeof process<"u"){const e=process.type;return e==="renderer"||e==="worker"?!1:!!(process.versions&&process.versions.node)}return!1}var O=async e=>{try{return{error:null,data:await e().catch(r=>{throw r})}}catch(t){return{error:t,data:null}}};function Me(e){return new URL(e,location.href).href}function P(e,t,r){return[e.active,e.installing,e.waiting].filter(n=>n!=null).find(n=>r(n.scriptURL,t))||null}var Ce=async(e,t={},r)=>{const s=Me(e),o=await navigator.serviceWorker.getRegistrations().then(a=>a.filter(l=>P(l,s,r)));!navigator.serviceWorker.controller&&o.length>0&&location.reload();const[i]=o;if(i)return i.update().then(()=>[P(i,s,r),i]);const n=await O(async()=>{const a=await navigator.serviceWorker.register(e,t);return[P(a,s,r),a]});if(n.error){if(n.error.message.includes("(404)")){const l=new URL(t?.scope||"/",location.href);throw new Error(d.formatMessage(`Failed to register a Service Worker for scope ('${l.href}') with script ('${s}'): Service Worker script does not exist at the given path.

Did you forget to run "npx msw init <PUBLIC_DIR>"?

Learn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`))}throw new Error(d.formatMessage(`Failed to register the Service Worker:

%s`,n.error.message))}return n.data};function J(e={}){if(e.quiet)return;const t=e.message||"Mocking enabled.";console.groupCollapsed(`%c${d.formatMessage(t)}`,"color:orangered;font-weight:bold;"),console.log("%cDocumentation: %chttps://mswjs.io/docs","font-weight:bold","font-weight:normal"),console.log("Found an issue? https://github.com/mswjs/msw/issues"),e.workerUrl&&console.log("Worker script URL:",e.workerUrl),e.workerScope&&console.log("Worker scope:",e.workerScope),console.groupEnd()}async function Ie(e,t){if(e.workerChannel.send("MOCK_ACTIVATE"),await e.events.once("MOCKING_ENABLED"),e.isMockingEnabled){d.warn('Found a redundant "worker.start()" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this "worker.start()" call.');return}e.isMockingEnabled=!0,J({quiet:t.quiet,workerScope:e.registration?.scope,workerUrl:e.worker?.scriptURL})}var Ae=class{constructor(e){this.port=e}postMessage(e,...t){const[r,s]=t;this.port.postMessage({type:e,data:r},{transfer:s})}};function Oe(e){if(!["HEAD","GET"].includes(e.method))return e.body}function He(e){return new Request(e.url,{...e,body:Oe(e)})}var We=(e,t)=>async(r,s)=>{const o=new Ae(r.ports[0]),i=s.payload.id,n=He(s.payload),a=n.clone(),l=n.clone();pe.cache.set(n,l),e.requests.set(i,l);try{await K(n,i,e.getRequestHandlers(),t,e.emitter,{onPassthroughResponse(){o.postMessage("PASSTHROUGH")},async onMockedResponse(c,{handler:u,parsedResult:h}){const g=c.clone(),m=c.clone(),p=ke(c);if(e.supports.readableStreamTransfer){const f=c.body;o.postMessage("MOCK_RESPONSE",{...p,body:f},f?[f]:void 0)}else{const f=c.body===null?null:await g.arrayBuffer();o.postMessage("MOCK_RESPONSE",{...p,body:f})}t.quiet||e.emitter.once("response:mocked",()=>{u.log({request:a,response:m,parsedResult:h})})}})}catch(c){c instanceof Error&&(d.error(`Uncaught exception in the request handler for "%s %s":

%s

This exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,n.method,n.url,c.stack??c),o.postMessage("MOCK_RESPONSE",{status:500,statusText:"Request Handler Error",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:c.name,message:c.message,stack:c.stack})}))}};async function _e(e){e.workerChannel.send("INTEGRITY_CHECK_REQUEST");const{payload:t}=await e.events.once("INTEGRITY_CHECK_RESPONSE");t.checksum!=="26357c79639bfa20d64c0efca2a87423"&&d.warn(`The currently registered Service Worker has been generated by a different version of MSW (${t.packageVersion}) and may not be fully compatible with the installed version.

It's recommended you update your worker script by running this command:

  • npx msw init <PUBLIC_DIR>

You can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`)}var je=new TextEncoder;function De(e){return je.encode(e)}function Be(e,t){return new TextDecoder(t).decode(e)}function Ue(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}var R=Symbol("isPatchedModule");function Ne(e,t){try{return e[t],!0}catch{return!1}}var $e=new Set([101,103,204,205,304]);function z(e){return $e.has(e)}function Y(e){return new Response(JSON.stringify(e instanceof Error?{name:e.name,message:e.message,stack:e.stack}:e),{status:500,statusText:"Unhandled Exception",headers:{"Content-Type":"application/json"}})}function L(e){return Ne(e,"type")&&e.type==="error"}var Fe=Object.defineProperty,Ge=(e,t)=>{for(var r in t)Fe(e,r,{get:t[r],enumerable:!0})},x={};Ge(x,{blue:()=>Ke,gray:()=>M,green:()=>Je,red:()=>Ve,yellow:()=>Xe});function Xe(e){return`\x1B[33m${e}\x1B[0m`}function Ke(e){return`\x1B[34m${e}\x1B[0m`}function M(e){return`\x1B[90m${e}\x1B[0m`}function Ve(e){return`\x1B[31m${e}\x1B[0m`}function Je(e){return`\x1B[32m${e}\x1B[0m`}var T=A(),Q=class{constructor(e){this.name=e,this.prefix=`[${this.name}]`;const t=B("DEBUG"),r=B("LOG_LEVEL");t==="1"||t==="true"||typeof t<"u"&&this.name.startsWith(t)?(this.debug=k(r,"debug")?v:this.debug,this.info=k(r,"info")?v:this.info,this.success=k(r,"success")?v:this.success,this.warning=k(r,"warning")?v:this.warning,this.error=k(r,"error")?v:this.error):(this.info=v,this.success=v,this.warning=v,this.error=v,this.only=v)}prefix;extend(e){return new Q(`${this.name}:${e}`)}debug(e,...t){this.logEntry({level:"debug",message:M(e),positionals:t,prefix:this.prefix,colors:{prefix:"gray"}})}info(e,...t){this.logEntry({level:"info",message:e,positionals:t,prefix:this.prefix,colors:{prefix:"blue"}});const r=new ze;return(s,...o)=>{r.measure(),this.logEntry({level:"info",message:`${s} ${M(`${r.deltaTime}ms`)}`,positionals:o,prefix:this.prefix,colors:{prefix:"blue"}})}}success(e,...t){this.logEntry({level:"info",message:e,positionals:t,prefix:`✔ ${this.prefix}`,colors:{timestamp:"green",prefix:"green"}})}warning(e,...t){this.logEntry({level:"warning",message:e,positionals:t,prefix:`⚠ ${this.prefix}`,colors:{timestamp:"yellow",prefix:"yellow"}})}error(e,...t){this.logEntry({level:"error",message:e,positionals:t,prefix:`✖ ${this.prefix}`,colors:{timestamp:"red",prefix:"red"}})}only(e){e()}createEntry(e,t){return{timestamp:new Date,level:e,message:t}}logEntry(e){const{level:t,message:r,prefix:s,colors:o,positionals:i=[]}=e,n=this.createEntry(t,r),a=o?.timestamp||"gray",l=o?.prefix||"gray",c={timestamp:x[a],prefix:x[l]};this.getWriter(t)([c.timestamp(this.formatTimestamp(n.timestamp))].concat(s!=null?c.prefix(s):[]).concat(U(r)).join(" "),...i.map(U))}formatTimestamp(e){return`${e.toLocaleTimeString("en-GB")}:${e.getMilliseconds()}`}getWriter(e){switch(e){case"debug":case"success":case"info":return Ye;case"warning":return Qe;case"error":return Ze}}},ze=class{startTime;endTime;deltaTime;constructor(){this.startTime=performance.now()}measure(){this.endTime=performance.now();const e=this.endTime-this.startTime;this.deltaTime=e.toFixed(2)}},v=()=>{};function Ye(e,...t){if(T){process.stdout.write(q(e,...t)+`
`);return}console.log(e,...t)}function Qe(e,...t){if(T){process.stderr.write(q(e,...t)+`
`);return}console.warn(e,...t)}function Ze(e,...t){if(T){process.stderr.write(q(e,...t)+`
`);return}console.error(e,...t)}function B(e){return T?qe[e]:globalThis[e]?.toString()}function k(e,t){return e!==void 0&&e!==t}function U(e){return typeof e>"u"?"undefined":e===null?"null":typeof e=="string"?e:typeof e=="object"?JSON.stringify(e):e.toString()}var et=class extends Error{constructor(e,t,r){super(`Possible EventEmitter memory leak detected. ${r} ${t.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`),this.emitter=e,this.type=t,this.count=r,this.name="MaxListenersExceededWarning"}},Z=class{static listenerCount(e,t){return e.listenerCount(t)}constructor(){this.events=new Map,this.maxListeners=Z.defaultMaxListeners,this.hasWarnedAboutPotentialMemoryLeak=!1}_emitInternalEvent(e,t,r){this.emit(e,t,r)}_getListeners(e){return Array.prototype.concat.apply([],this.events.get(e))||[]}_removeListener(e,t){const r=e.indexOf(t);return r>-1&&e.splice(r,1),[]}_wrapOnceListener(e,t){const r=(...s)=>(this.removeListener(e,r),t.apply(this,s));return Object.defineProperty(r,"name",{value:t.name}),r}setMaxListeners(e){return this.maxListeners=e,this}getMaxListeners(){return this.maxListeners}eventNames(){return Array.from(this.events.keys())}emit(e,...t){const r=this._getListeners(e);return r.forEach(s=>{s.apply(this,t)}),r.length>0}addListener(e,t){this._emitInternalEvent("newListener",e,t);const r=this._getListeners(e).concat(t);if(this.events.set(e,r),this.maxListeners>0&&this.listenerCount(e)>this.maxListeners&&!this.hasWarnedAboutPotentialMemoryLeak){this.hasWarnedAboutPotentialMemoryLeak=!0;const s=new et(this,e,this.listenerCount(e));console.warn(s)}return this}on(e,t){return this.addListener(e,t)}once(e,t){return this.addListener(e,this._wrapOnceListener(e,t))}prependListener(e,t){const r=this._getListeners(e);if(r.length>0){const s=[t].concat(r);this.events.set(e,s)}else this.events.set(e,r.concat(t));return this}prependOnceListener(e,t){return this.prependListener(e,this._wrapOnceListener(e,t))}removeListener(e,t){const r=this._getListeners(e);return r.length>0&&(this._removeListener(r,t),this.events.set(e,r),this._emitInternalEvent("removeListener",e,t)),this}off(e,t){return this.removeListener(e,t)}removeAllListeners(e){return e?this.events.delete(e):this.events.clear(),this}listeners(e){return Array.from(this._getListeners(e))}listenerCount(e){return this._getListeners(e).length}rawListeners(e){return this.listeners(e)}},ee=Z;ee.defaultMaxListeners=10;var tt="x-interceptors-internal-request-id";function N(e){return globalThis[e]||void 0}function rt(e,t){globalThis[e]=t}function st(e){delete globalThis[e]}var H=class{constructor(e){this.symbol=e,this.readyState="INACTIVE",this.emitter=new ee,this.subscriptions=[],this.logger=new Q(e.description),this.emitter.setMaxListeners(0),this.logger.info("constructing the interceptor...")}checkEnvironment(){return!0}apply(){const e=this.logger.extend("apply");if(e.info("applying the interceptor..."),this.readyState==="APPLIED"){e.info("intercepted already applied!");return}if(!this.checkEnvironment()){e.info("the interceptor cannot be applied in this environment!");return}this.readyState="APPLYING";const r=this.getInstance();if(r){e.info("found a running instance, reusing..."),this.on=(s,o)=>(e.info('proxying the "%s" listener',s),r.emitter.addListener(s,o),this.subscriptions.push(()=>{r.emitter.removeListener(s,o),e.info('removed proxied "%s" listener!',s)}),this),this.readyState="APPLIED";return}e.info("no running instance found, setting up a new instance..."),this.setup(),this.setInstance(),this.readyState="APPLIED"}setup(){}on(e,t){const r=this.logger.extend("on");return this.readyState==="DISPOSING"||this.readyState==="DISPOSED"?(r.info("cannot listen to events, already disposed!"),this):(r.info('adding "%s" event listener:',e,t),this.emitter.on(e,t),this)}once(e,t){return this.emitter.once(e,t),this}off(e,t){return this.emitter.off(e,t),this}removeAllListeners(e){return this.emitter.removeAllListeners(e),this}dispose(){const e=this.logger.extend("dispose");if(this.readyState==="DISPOSED"){e.info("cannot dispose, already disposed!");return}if(e.info("disposing the interceptor..."),this.readyState="DISPOSING",!this.getInstance()){e.info("no interceptors running, skipping dispose...");return}if(this.clearInstance(),e.info("global symbol deleted:",N(this.symbol)),this.subscriptions.length>0){e.info("disposing of %d subscriptions...",this.subscriptions.length);for(const t of this.subscriptions)t();this.subscriptions=[],e.info("disposed of all subscriptions!",this.subscriptions.length)}this.emitter.removeAllListeners(),e.info("destroyed the listener!"),this.readyState="DISPOSED"}getInstance(){var e;const t=N(this.symbol);return this.logger.info("retrieved global instance:",(e=t?.constructor)==null?void 0:e.name),t}setInstance(){rt(this.symbol,this),this.logger.info("set global instance!",this.symbol.description)}clearInstance(){st(this.symbol),this.logger.info("cleared global instance!",this.symbol.description)}};function te(){return Math.random().toString(16).slice(2)}var C=class extends H{constructor(e){C.symbol=Symbol(e.name),super(C.symbol),this.interceptors=e.interceptors}setup(){const e=this.logger.extend("setup");e.info("applying all %d interceptors...",this.interceptors.length);for(const t of this.interceptors)e.info('applying "%s" interceptor...',t.constructor.name),t.apply(),e.info("adding interceptor dispose subscription"),this.subscriptions.push(()=>t.dispose())}on(e,t){for(const r of this.interceptors)r.on(e,t);return this}once(e,t){for(const r of this.interceptors)r.once(e,t);return this}off(e,t){for(const r of this.interceptors)r.off(e,t);return this}removeAllListeners(e){for(const t of this.interceptors)t.removeAllListeners(e);return this}};function nt(e){return(t,r)=>{const{payload:s}=r,{requestId:o}=s,i=e.requests.get(o);if(e.requests.delete(o),s.type?.includes("opaque"))return;const n=s.status===0?Response.error():new Response(z(s.status)?null:s.body,s);n.url||Object.defineProperty(n,"url",{value:i.url,enumerable:!0,writable:!1}),e.emitter.emit(s.isMockedResponse?"response:mocked":"response:bypass",{response:n,request:i,requestId:s.requestId})}}function ot(e,t){!t?.quiet&&!location.href.startsWith(e.scope)&&d.warn(`Cannot intercept requests on this page because it's outside of the worker's scope ("${e.scope}"). If you wish to mock API requests on this page, you must resolve this scope issue.

- (Recommended) Register the worker at the root level ("/") of your application.
- Set the "Service-Worker-Allowed" response header to allow out-of-scope workers.`)}var it=e=>function(r,s){return(async()=>{e.events.removeAllListeners(),e.workerChannel.on("REQUEST",We(e,r)),e.workerChannel.on("RESPONSE",nt(e));const n=await Ce(r.serviceWorker.url,r.serviceWorker.options,r.findWorker),[a,l]=n;if(!a){const c=s?.findWorker?d.formatMessage(`Failed to locate the Service Worker registration using a custom "findWorker" predicate.

Please ensure that the custom predicate properly locates the Service Worker registration at "%s".
More details: https://mswjs.io/docs/api/setup-worker/start#findworker
`,r.serviceWorker.url):d.formatMessage(`Failed to locate the Service Worker registration.

This most likely means that the worker script URL "%s" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.

Please consider using a custom "serviceWorker.url" option to point to the actual worker script location, or a custom "findWorker" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,r.serviceWorker.url,location.host);throw new Error(c)}return e.worker=a,e.registration=l,e.events.addListener(window,"beforeunload",()=>{a.state!=="redundant"&&e.workerChannel.send("CLIENT_CLOSED"),window.clearInterval(e.keepAliveInterval)}),await _e(e).catch(c=>{d.error("Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below."),console.error(c)}),e.keepAliveInterval=window.setInterval(()=>e.workerChannel.send("KEEPALIVE_REQUEST"),5e3),ot(l,e.startOptions),l})().then(async n=>{const a=n.installing||n.waiting;return a&&await new Promise(l=>{a.addEventListener("statechange",()=>{if(a.state==="activated")return l()})}),await Ie(e,r).catch(l=>{throw new Error(`Failed to enable mocking: ${l?.message}`)}),n})};function re(e={}){e.quiet||console.log(`%c${d.formatMessage("Mocking disabled.")}`,"color:orangered;font-weight:bold;")}var at=e=>function(){if(!e.isMockingEnabled){d.warn('Found a redundant "worker.stop()" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this "worker.stop()" call.');return}e.workerChannel.send("MOCK_DEACTIVATE"),e.isMockingEnabled=!1,window.clearInterval(e.keepAliveInterval),re({quiet:e.startOptions?.quiet})},lt={serviceWorker:{url:"/mockServiceWorker.js",options:null},quiet:!1,waitUntilReady:!0,onUnhandledRequest:"warn",findWorker(e,t){return e===t}};function ct(){const e=(t,r)=>{e.state="pending",e.resolve=s=>{if(e.state!=="pending")return;e.result=s;const o=i=>(e.state="fulfilled",i);return t(s instanceof Promise?s:Promise.resolve(s).then(o))},e.reject=s=>{if(e.state==="pending")return queueMicrotask(()=>{e.state="rejected"}),r(e.rejectionReason=s)}};return e}var I=class extends Promise{#e;resolve;reject;constructor(e=null){const t=ct();super((r,s)=>{t(r,s),e?.(t.resolve,t.reject)}),this.#e=t,this.resolve=this.#e.resolve,this.reject=this.#e.reject}get state(){return this.#e.state}get rejectionReason(){return this.#e.rejectionReason}then(e,t){return this.#t(super.then(e,t))}catch(e){return this.#t(super.catch(e))}finally(e){return this.#t(super.finally(e))}#t(e){return Object.defineProperties(e,{resolve:{configurable:!0,value:this.resolve},reject:{configurable:!0,value:this.reject}})}},ut=class{constructor(e){this.request=e,this.responsePromise=new I}respondWith(e){w(this.responsePromise.state==="pending",'Failed to respond to "%s %s" request: the "request" event has already been responded to.',this.request.method,this.request.url),this.responsePromise.resolve(e)}};function se(e){const t=new ut(e);return Reflect.set(e,"respondWith",t.respondWith.bind(t)),{interactiveRequest:e,requestController:t}}async function S(e,t,...r){const s=e.listeners(t);if(s.length!==0)for(const o of s)await o.apply(e,r)}function ht(e){try{return new URL(e),!0}catch{return!1}}var ne=class extends H{constructor(){super(ne.symbol)}checkEnvironment(){return typeof globalThis<"u"&&typeof globalThis.fetch<"u"}async setup(){const e=globalThis.fetch;w(!e[R],'Failed to patch the "fetch" module: already patched.'),globalThis.fetch=async(t,r)=>{var s;const o=te(),i=typeof t=="string"&&typeof location<"u"&&!ht(t)?new URL(t,location.origin):t,n=new Request(i,r);this.logger.info("[%s] %s",n.method,n.url);const{interactiveRequest:a,requestController:l}=se(n);this.logger.info('emitting the "request" event for %d listener(s)...',this.emitter.listenerCount("request")),this.emitter.once("request",({requestId:y})=>{y===o&&l.responsePromise.state==="pending"&&l.responsePromise.resolve(void 0)}),this.logger.info("awaiting for the mocked response...");const c=a.signal,u=new I;c&&c.addEventListener("abort",()=>{u.reject(c.reason)},{once:!0});const h=new I,g=y=>{if(this.logger.info("responding with a mock response:",y),this.emitter.listenerCount("response")>0){this.logger.info('emitting the "response" event...');const b=y.clone();this.emitter.emit("response",{response:b,isMockedResponse:!0,request:a,requestId:o})}Object.defineProperty(y,"url",{writable:!1,enumerable:!0,configurable:!1,value:n.url}),h.resolve(y)},m=y=>{h.reject(y)},p=await O(async()=>{const y=S(this.emitter,"request",{request:a,requestId:o});await Promise.race([u,y,l.responsePromise]),this.logger.info("all request listeners have been resolved!");const b=await l.responsePromise;return this.logger.info("event.respondWith called with:",b),b});if(u.state==="rejected")return this.logger.info("request has been aborted:",u.rejectionReason),h.reject(u.rejectionReason),h;if(p.error)return this.logger.info("request listerner threw an error:",p.error),p.error instanceof Response&&(L(p.error)?m($(p.error)):g(p.error)),this.emitter.listenerCount("unhandledException")>0&&(await S(this.emitter,"unhandledException",{error:p.error,request:n,requestId:o,controller:{respondWith:g,errorWith:m}}),h.state!=="pending")||g(Y(p.error)),h;const f=p.data;return f&&!((s=n.signal)!=null&&s.aborted)?(this.logger.info("received mocked response:",f),L(f)?(this.logger.info("received a network error response, rejecting the request promise..."),m($(f))):g(f),h):(this.logger.info("no mocked response received!"),e(n).then(y=>{if(this.logger.info("original fetch performed",y),this.emitter.listenerCount("response")>0){this.logger.info('emitting the "response" event...');const b=y.clone();this.emitter.emit("response",{response:b,isMockedResponse:!1,request:a,requestId:o})}return y}))},Object.defineProperty(globalThis.fetch,R,{enumerable:!0,configurable:!0,value:!0}),this.subscriptions.push(()=>{Object.defineProperty(globalThis.fetch,R,{value:void 0}),globalThis.fetch=e,this.logger.info('restored native "globalThis.fetch"!',globalThis.fetch.name)})}},oe=ne;oe.symbol=Symbol("fetch");function $(e){return Object.assign(new TypeError("Failed to fetch"),{cause:e})}function dt(e,t){const r=new Uint8Array(e.byteLength+t.byteLength);return r.set(e,0),r.set(t,e.byteLength),r}var ie=class{constructor(e,t){this.AT_TARGET=0,this.BUBBLING_PHASE=0,this.CAPTURING_PHASE=0,this.NONE=0,this.type="",this.srcElement=null,this.currentTarget=null,this.eventPhase=0,this.isTrusted=!0,this.composed=!1,this.cancelable=!0,this.defaultPrevented=!1,this.bubbles=!0,this.lengthComputable=!0,this.loaded=0,this.total=0,this.cancelBubble=!1,this.returnValue=!0,this.type=e,this.target=t?.target||null,this.currentTarget=t?.currentTarget||null,this.timeStamp=Date.now()}composedPath(){return[]}initEvent(e,t,r){this.type=e,this.bubbles=!!t,this.cancelable=!!r}preventDefault(){this.defaultPrevented=!0}stopPropagation(){}stopImmediatePropagation(){}},pt=class extends ie{constructor(e,t){super(e),this.lengthComputable=t?.lengthComputable||!1,this.composed=t?.composed||!1,this.loaded=t?.loaded||0,this.total=t?.total||0}},ft=typeof ProgressEvent<"u";function gt(e,t,r){const s=["error","progress","loadstart","loadend","load","timeout","abort"],o=ft?ProgressEvent:pt;return s.includes(t)?new o(t,{lengthComputable:!0,loaded:r?.loaded||0,total:r?.total||0}):new ie(t,{target:e,currentTarget:e})}function ae(e,t){if(!(t in e))return null;if(Object.prototype.hasOwnProperty.call(e,t))return e;const s=Reflect.getPrototypeOf(e);return s?ae(s,t):null}function F(e,t){return new Proxy(e,mt(t))}function mt(e){const{constructorCall:t,methodCall:r,getProperty:s,setProperty:o}=e,i={};return typeof t<"u"&&(i.construct=function(n,a,l){const c=Reflect.construct.bind(null,n,a,l);return t.call(l,a,c)}),i.set=function(n,a,l){const c=()=>{const u=ae(n,a)||n,h=Reflect.getOwnPropertyDescriptor(u,a);return typeof h?.set<"u"?(h.set.apply(n,[l]),!0):Reflect.defineProperty(u,a,{writable:!0,enumerable:!0,configurable:!0,value:l})};return typeof o<"u"?o.call(n,[a,l],c):c()},i.get=function(n,a,l){const c=()=>n[a],u=typeof s<"u"?s.call(n,[a,l],c):c();return typeof u=="function"?(...h)=>{const g=u.bind(n,...h);return typeof r<"u"?r.call(n,[a,h],g):g()}:u},i}function yt(e){return["application/xhtml+xml","application/xml","image/svg+xml","text/html","text/xml"].some(r=>e.startsWith(r))}function vt(e){try{return JSON.parse(e)}catch{return null}}function wt(e,t){const r=z(e.status)?null:t;return new Response(r,{status:e.status,statusText:e.statusText,headers:bt(e.getAllResponseHeaders())})}function bt(e){const t=new Headers,r=e.split(/[\r\n]+/);for(const s of r){if(s.trim()==="")continue;const[o,...i]=s.split(": "),n=i.join(": ");t.append(o,n)}return t}var G=Symbol("isMockedResponse"),Et=A(),Rt=class{constructor(e,t){this.initialRequest=e,this.logger=t,this.method="GET",this.url=null,this.events=new Map,this.requestId=te(),this.requestHeaders=new Headers,this.responseBuffer=new Uint8Array,this.request=F(e,{setProperty:([r,s],o)=>{switch(r){case"ontimeout":{const i=r.slice(2);return this.request.addEventListener(i,s),o()}default:return o()}},methodCall:([r,s],o)=>{var i;switch(r){case"open":{const[n,a]=s;return typeof a>"u"?(this.method="GET",this.url=X(n)):(this.method=n,this.url=X(a)),this.logger=this.logger.extend(`${this.method} ${this.url.href}`),this.logger.info("open",this.method,this.url.href),o()}case"addEventListener":{const[n,a]=s;return this.registerEvent(n,a),this.logger.info("addEventListener",n,a),o()}case"setRequestHeader":{const[n,a]=s;return this.requestHeaders.set(n,a),this.logger.info("setRequestHeader",n,a),o()}case"send":{const[n]=s;n!=null&&(this.requestBody=typeof n=="string"?De(n):n),this.request.addEventListener("load",()=>{if(typeof this.onResponse<"u"){const c=wt(this.request,this.request.response);this.onResponse.call(this,{response:c,isMockedResponse:G in this.request,request:a,requestId:this.requestId})}});const a=this.toFetchApiRequest();(((i=this.onRequest)==null?void 0:i.call(this,{request:a,requestId:this.requestId}))||Promise.resolve()).finally(()=>{if(this.request.readyState<this.request.LOADING)return this.logger.info("request callback settled but request has not been handled (readystate %d), performing as-is...",this.request.readyState),Et&&this.request.setRequestHeader(tt,this.requestId),o()});break}default:return o()}}})}registerEvent(e,t){const s=(this.events.get(e)||[]).concat(t);this.events.set(e,s),this.logger.info('registered event "%s"',e,t)}respondWith(e){this.logger.info("responding with a mocked response: %d %s",e.status,e.statusText),E(this.request,G,!0),E(this.request,"status",e.status),E(this.request,"statusText",e.statusText),E(this.request,"responseURL",this.url.href),this.request.getResponseHeader=new Proxy(this.request.getResponseHeader,{apply:(s,o,i)=>{if(this.logger.info("getResponseHeader",i[0]),this.request.readyState<this.request.HEADERS_RECEIVED)return this.logger.info("headers not received yet, returning null"),null;const n=e.headers.get(i[0]);return this.logger.info('resolved response header "%s" to',i[0],n),n}}),this.request.getAllResponseHeaders=new Proxy(this.request.getAllResponseHeaders,{apply:()=>{if(this.logger.info("getAllResponseHeaders"),this.request.readyState<this.request.HEADERS_RECEIVED)return this.logger.info("headers not received yet, returning empty string"),"";const o=Array.from(e.headers.entries()).map(([i,n])=>`${i}: ${n}`).join(`\r
`);return this.logger.info("resolved all response headers to",o),o}}),Object.defineProperties(this.request,{response:{enumerable:!0,configurable:!1,get:()=>this.response},responseText:{enumerable:!0,configurable:!1,get:()=>this.responseText},responseXML:{enumerable:!0,configurable:!1,get:()=>this.responseXML}});const t=e.headers.has("Content-Length")?Number(e.headers.get("Content-Length")):void 0;this.logger.info("calculated response body length",t),this.trigger("loadstart",{loaded:0,total:t}),this.setReadyState(this.request.HEADERS_RECEIVED),this.setReadyState(this.request.LOADING);const r=()=>{this.logger.info("finalizing the mocked response..."),this.setReadyState(this.request.DONE),this.trigger("load",{loaded:this.responseBuffer.byteLength,total:t}),this.trigger("loadend",{loaded:this.responseBuffer.byteLength,total:t})};if(e.body){this.logger.info("mocked response has body, streaming...");const s=e.body.getReader(),o=async()=>{const{value:i,done:n}=await s.read();if(n){this.logger.info("response body stream done!"),r();return}i&&(this.logger.info("read response body chunk:",i),this.responseBuffer=dt(this.responseBuffer,i),this.trigger("progress",{loaded:this.responseBuffer.byteLength,total:t})),o()};o()}else r()}responseBufferToText(){return Be(this.responseBuffer)}get response(){if(this.logger.info("getResponse (responseType: %s)",this.request.responseType),this.request.readyState!==this.request.DONE)return null;switch(this.request.responseType){case"json":{const e=vt(this.responseBufferToText());return this.logger.info("resolved response JSON",e),e}case"arraybuffer":{const e=Ue(this.responseBuffer);return this.logger.info("resolved response ArrayBuffer",e),e}case"blob":{const e=this.request.getResponseHeader("Content-Type")||"text/plain",t=new Blob([this.responseBufferToText()],{type:e});return this.logger.info("resolved response Blob (mime type: %s)",t,e),t}default:{const e=this.responseBufferToText();return this.logger.info('resolving "%s" response type as text',this.request.responseType,e),e}}}get responseText(){if(w(this.request.responseType===""||this.request.responseType==="text","InvalidStateError: The object is in invalid state."),this.request.readyState!==this.request.LOADING&&this.request.readyState!==this.request.DONE)return"";const e=this.responseBufferToText();return this.logger.info('getResponseText: "%s"',e),e}get responseXML(){if(w(this.request.responseType===""||this.request.responseType==="document","InvalidStateError: The object is in invalid state."),this.request.readyState!==this.request.DONE)return null;const e=this.request.getResponseHeader("Content-Type")||"";return typeof DOMParser>"u"?(console.warn("Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly."),null):yt(e)?new DOMParser().parseFromString(this.responseBufferToText(),e):null}errorWith(e){this.logger.info("responding with an error"),this.setReadyState(this.request.DONE),this.trigger("error"),this.trigger("loadend")}setReadyState(e){if(this.logger.info("setReadyState: %d -> %d",this.request.readyState,e),this.request.readyState===e){this.logger.info("ready state identical, skipping transition...");return}E(this.request,"readyState",e),this.logger.info("set readyState to: %d",e),e!==this.request.UNSENT&&(this.logger.info('triggerring "readystatechange" event...'),this.trigger("readystatechange"))}trigger(e,t){const r=this.request[`on${e}`],s=gt(this.request,e,t);this.logger.info('trigger "%s"',e,t||""),typeof r=="function"&&(this.logger.info('found a direct "%s" callback, calling...',e),r.call(this.request,s));for(const[o,i]of this.events)o===e&&(this.logger.info('found %d listener(s) for "%s" event, calling...',i.length,e),i.forEach(n=>n.call(this.request,s)))}toFetchApiRequest(){this.logger.info("converting request to a Fetch API Request...");const e=new Request(this.url.href,{method:this.method,headers:this.requestHeaders,credentials:this.request.withCredentials?"include":"same-origin",body:["GET","HEAD"].includes(this.method)?null:this.requestBody}),t=F(e.headers,{methodCall:([r,s],o)=>{switch(r){case"append":case"set":{const[i,n]=s;this.request.setRequestHeader(i,n);break}case"delete":{const[i]=s;console.warn(`XMLHttpRequest: Cannot remove a "${i}" header from the Fetch API representation of the "${e.method} ${e.url}" request. XMLHttpRequest headers cannot be removed.`);break}}return o()}});return E(e,"headers",t),this.logger.info("converted request to a Fetch API Request!",e),e}};function X(e){return typeof location>"u"?new URL(e):new URL(e.toString(),location.href)}function E(e,t,r){Reflect.defineProperty(e,t,{writable:!0,enumerable:!0,value:r})}function kt({emitter:e,logger:t}){return new Proxy(globalThis.XMLHttpRequest,{construct(s,o,i){t.info("constructed new XMLHttpRequest");const n=Reflect.construct(s,o,i),a=Object.getOwnPropertyDescriptors(s.prototype);for(const c in a)Reflect.defineProperty(n,c,a[c]);const l=new Rt(n,t);return l.onRequest=async function({request:c,requestId:u}){const{interactiveRequest:h,requestController:g}=se(c);this.logger.info("awaiting mocked response..."),e.once("request",({requestId:f})=>{f===u&&g.responsePromise.state==="pending"&&g.respondWith(void 0)});const m=await O(async()=>{this.logger.info('emitting the "request" event for %s listener(s)...',e.listenerCount("request")),await S(e,"request",{request:h,requestId:u}),this.logger.info('all "request" listeners settled!');const f=await g.responsePromise;return this.logger.info("event.respondWith called with:",f),f});if(m.error){if(this.logger.info("request listener threw an exception, aborting request...",m.error),m.error instanceof Response){L(m.error)?l.errorWith(new TypeError("Network error")):this.respondWith(m.error);return}if(e.listenerCount("unhandledException")>0&&(await S(e,"unhandledException",{error:m.error,request:c,requestId:u,controller:{respondWith:l.respondWith.bind(l),errorWith:l.errorWith.bind(l)}}),n.readyState>XMLHttpRequest.OPENED))return;l.respondWith(Y(m.error));return}const p=m.data;if(typeof p<"u"){if(this.logger.info("received mocked response: %d %s",p.status,p.statusText),L(p)){this.logger.info("received a network error response, rejecting the request promise..."),l.errorWith(new TypeError("Network error"));return}return l.respondWith(p)}this.logger.info("no mocked response received, performing request as-is...")},l.onResponse=async function({response:c,isMockedResponse:u,request:h,requestId:g}){this.logger.info('emitting the "response" event for %s listener(s)...',e.listenerCount("response")),e.emit("response",{response:c,isMockedResponse:u,request:h,requestId:g})},l.request}})}var le=class extends H{constructor(){super(le.interceptorSymbol)}checkEnvironment(){return typeof globalThis.XMLHttpRequest<"u"}setup(){const e=this.logger.extend("setup");e.info('patching "XMLHttpRequest" module...');const t=globalThis.XMLHttpRequest;w(!t[R],'Failed to patch the "XMLHttpRequest" module: already patched.'),globalThis.XMLHttpRequest=kt({emitter:this.emitter,logger:this.logger}),e.info('native "XMLHttpRequest" module patched!',globalThis.XMLHttpRequest.name),Object.defineProperty(globalThis.XMLHttpRequest,R,{enumerable:!0,configurable:!0,value:!0}),this.subscriptions.push(()=>{Object.defineProperty(globalThis.XMLHttpRequest,R,{value:void 0}),globalThis.XMLHttpRequest=t,e.info('native "XMLHttpRequest" module restored!',globalThis.XMLHttpRequest.name)})}},ce=le;ce.interceptorSymbol=Symbol("xhr");function qt(e,t){const r=new C({name:"fallback",interceptors:[new oe,new ce]});return r.on("request",async({request:s,requestId:o})=>{const i=s.clone(),n=await K(s,o,e.getRequestHandlers(),t,e.emitter,{onMockedResponse(a,{handler:l,parsedResult:c}){t.quiet||e.emitter.once("response:mocked",({response:u})=>{l.log({request:i,response:u,parsedResult:c})})}});n&&s.respondWith(n)}),r.on("response",({response:s,isMockedResponse:o,request:i,requestId:n})=>{e.emitter.emit(o?"response:mocked":"response:bypass",{response:s,request:i,requestId:n})}),r.apply(),r}function Lt(e){return async function(r){e.fallbackInterceptor=qt(e,r),J({message:"Mocking enabled (fallback mode).",quiet:r.quiet})}}function St(e){return function(){e.fallbackInterceptor?.dispose(),re({quiet:e.startOptions?.quiet})}}function Tt(){try{const e=new ReadableStream({start:r=>r.close()});return new MessageChannel().port1.postMessage(e,[e]),!0}catch{return!1}}var Pt=class extends ve{context;startHandler=null;stopHandler=null;listeners;constructor(...e){super(...e),w(!A(),d.formatMessage("Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.")),this.listeners=[],this.context=this.createWorkerContext()}createWorkerContext(){const e={isMockingEnabled:!1,startOptions:null,worker:null,getRequestHandlers:()=>this.handlersController.currentHandlers(),registration:null,requests:new Map,emitter:this.emitter,workerChannel:{on:(t,r)=>{this.context.events.addListener(navigator.serviceWorker,"message",s=>{if(s.source!==this.context.worker)return;const o=s.data;o&&o.type===t&&r(s,o)})},send:t=>{this.context.worker?.postMessage(t)}},events:{addListener:(t,r,s)=>(t.addEventListener(r,s),this.listeners.push({eventType:r,target:t,callback:s}),()=>{t.removeEventListener(r,s)}),removeAllListeners:()=>{for(const{target:t,eventType:r,callback:s}of this.listeners)t.removeEventListener(r,s);this.listeners=[]},once:t=>{const r=[];return new Promise((s,o)=>{const i=n=>{try{const a=n.data;a.type===t&&s(a)}catch(a){o(a)}};r.push(this.context.events.addListener(navigator.serviceWorker,"message",i),this.context.events.addListener(navigator.serviceWorker,"messageerror",o))}).finally(()=>{r.forEach(s=>s())})}},supports:{serviceWorkerApi:!("serviceWorker"in navigator)||location.protocol==="file:",readableStreamTransfer:Tt()}};return this.startHandler=e.supports.serviceWorkerApi?Lt(e):it(e),this.stopHandler=e.supports.serviceWorkerApi?St(e):at(e),e}async start(e={}){return e.waitUntilReady===!0&&d.warn('The "waitUntilReady" option has been deprecated. Please remove it from this "worker.start()" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'),this.context.startOptions=V(lt,e),await this.startHandler(this.context.startOptions,e)}stop(){super.dispose(),this.context.events.removeAllListeners(),this.context.emitter.removeAllListeners(),this.stopHandler()}};function Mt(...e){return new Pt(...e)}export{Pt as SetupWorkerApi,Mt as setupWorker};
