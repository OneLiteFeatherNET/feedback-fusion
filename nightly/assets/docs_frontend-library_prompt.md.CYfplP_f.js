import"./chunks/Prompt.1H-cI7NJ.js";import{s as d,y as o,c as e,e as i,a3 as s,o as a}from"./chunks/framework.BkOV7LPq.js";import"./chunks/service-type.C77c3olz.js";const r=s('<h1 id="prompt" tabindex="-1">Prompt <a class="header-anchor" href="#prompt" aria-label="Permalink to &quot;Prompt&quot;">​</a></h1><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">feedback-fusion-prompt</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> baseUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> promptId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div>',3),h={key:0,baseUrl:"https://mock.mock",promptId:"prompt"},l=s('<h1 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h1><table tabindex="0"><thead><tr><th>Attribute</th><th>Type</th><th>Default</th><th>Description</th><th>Required</th></tr></thead><tbody><tr><td><code>autoClose</code></td><td>Boolean</td><td><code>false</code></td><td>Determines whether the prompt should automatically close after form submission.</td><td>No</td></tr><tr><td><code>baseUrl</code></td><td>String</td><td></td><td>The base URL where the backend is proxied via gRPC-web.</td><td>Yes</td></tr><tr><td><code>closeAfter</code></td><td>Number</td><td><code>1000</code></td><td>Specifies the duration (in milliseconds) after which the prompt should close automatically if <code>autoClose</code> is set to true.</td><td>No</td></tr><tr><td><code>locale</code></td><td>String</td><td><code>en</code></td><td>Defines the locale for the prompt.</td><td>No</td></tr><tr><td><code>promptId</code></td><td>String</td><td></td><td>Specifies which prompt should be used.</td><td>Yes</td></tr></tbody></table>',2),b=JSON.parse('{"title":"Prompt","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend-library/prompt.md","filePath":"docs/frontend-library/prompt.md"}'),p={name:"docs/frontend-library/prompt.md"},f=Object.assign(p,{setup(n){const t=d(!1);return o(()=>setTimeout(()=>t.value=!0,500)),(c,m)=>(a(),e("div",null,[r,t.value?(a(),e("feedback-fusion-prompt",h)):i("",!0),l]))}});export{b as __pageData,f as default};
