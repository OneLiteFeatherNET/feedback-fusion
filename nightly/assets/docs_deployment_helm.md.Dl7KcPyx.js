import{_ as d,c as e,o,af as r}from"./chunks/framework.qz3g-WaS.js";const p=JSON.parse('{"title":"feedback-fusion","description":"","frontmatter":{},"headers":[],"relativePath":"docs/deployment/helm.md","filePath":"docs/deployment/helm.md"}'),a={name:"docs/deployment/helm.md"};function s(i,t,n,c,l,h){return o(),e("div",null,t[0]||(t[0]=[r(`<h1 id="feedback-fusion" tabindex="-1">feedback-fusion <a class="header-anchor" href="#feedback-fusion" aria-label="Permalink to &quot;feedback-fusion&quot;">​</a></h1><p>Feedback-Fusion helm chart</p><p><img src="https://img.shields.io/badge/Version-0.3.1-informational?style=flat-square" alt="Version: 0.3.1"> <img src="https://img.shields.io/badge/Type-application-informational?style=flat-square" alt="Type: application"> <img src="https://img.shields.io/badge/AppVersion-0.4.0-informational?style=flat-square" alt="AppVersion: 0.4.0"></p><h2 id="installing-the-chart" tabindex="-1">Installing the Chart <a class="header-anchor" href="#installing-the-chart" aria-label="Permalink to &quot;Installing the Chart&quot;">​</a></h2><p>To install the chart use the following commands:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://onelitefeathernet.github.io/feedback-fusion/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feedback-fusion/feedback-fusion</span></span></code></pre></div><h2 id="values" tabindex="-1">Values <a class="header-anchor" href="#values" aria-label="Permalink to &quot;Values&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Key</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>api.affinity</td><td>object</td><td><code>{}</code></td><td></td></tr><tr><td>api.fullnameOverride</td><td>string</td><td><code>&quot;&quot;</code></td><td>full name override</td></tr><tr><td>api.image.pullPolicy</td><td>string</td><td><code>&quot;IfNotPresent&quot;</code></td><td>pull policy</td></tr><tr><td>api.image.repository</td><td>string</td><td><code>&quot;ghcr.io/onelitefeathernet/feedback-fusion&quot;</code></td><td>image repository</td></tr><tr><td>api.image.tag</td><td>string</td><td><code>&quot;&quot;</code></td><td>Overrides the image tag whose default is the chart appVersion.</td></tr><tr><td>api.imagePullSecrets</td><td>list</td><td><code>[]</code></td><td>optional pull secrets</td></tr><tr><td>api.ingress.annotations</td><td>object</td><td><code>{}</code></td><td>annotations to attach to the ingress resource</td></tr><tr><td>api.ingress.className</td><td>string</td><td><code>&quot;&quot;</code></td><td>which ingress class to use</td></tr><tr><td>api.ingress.enabled</td><td>bool</td><td><code>false</code></td><td>wether to create the ingress</td></tr><tr><td>api.ingress.hosts</td><td>string</td><td><code>nil</code></td><td>hosts to listen on</td></tr><tr><td>api.ingress.tls</td><td>list</td><td><code>[]</code></td><td>tls secret reference</td></tr><tr><td>api.livenessProbe.grpc.port</td><td>int</td><td><code>8000</code></td><td></td></tr><tr><td>api.livenessProbe.periodSeconds</td><td>int</td><td><code>5</code></td><td></td></tr><tr><td>api.nameOverride</td><td>string</td><td><code>&quot;&quot;</code></td><td>name override</td></tr><tr><td>api.nodeSelector</td><td>object</td><td><code>{}</code></td><td></td></tr><tr><td>api.podAnnotations</td><td>object</td><td><code>{}</code></td><td>annotatiosn to attach to the pod</td></tr><tr><td>api.podLabels</td><td>object</td><td><code>{}</code></td><td>labels to attach to the pod</td></tr><tr><td>api.podSecurityContext</td><td>object</td><td><code>{}</code></td><td>the pod security context</td></tr><tr><td>api.replicaCount</td><td>int</td><td><code>1</code></td><td>If you want to use high availability make sure to configure skytable distributed caching as otherwise the replicas won&#39;t know a different instance modified the dataset. See <a href="https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/caching.html#caching" target="_blank" rel="noreferrer">https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/caching.html#caching</a></td></tr><tr><td>api.resources</td><td>object</td><td><code>{}</code></td><td>pod resources</td></tr><tr><td>api.securityContext</td><td>object</td><td><code>{}</code></td><td>security context</td></tr><tr><td>api.service.type</td><td>string</td><td><code>&quot;ClusterIP&quot;</code></td><td>service type</td></tr><tr><td>api.serviceAccount.annotations</td><td>object</td><td><code>{}</code></td><td>Annotations to add to the service account</td></tr><tr><td>api.serviceAccount.automount</td><td>bool</td><td><code>true</code></td><td>Automatically mount a ServiceAccount&#39;s API credentials?</td></tr><tr><td>api.serviceAccount.create</td><td>bool</td><td><code>true</code></td><td>Specifies whether a service account should be created</td></tr><tr><td>api.serviceAccount.name</td><td>string</td><td><code>&quot;&quot;</code></td><td>The name of the service account to use. If not set and create is true, a name is generated using the fullname template</td></tr><tr><td>api.startupProbe.failureThreshold</td><td>int</td><td><code>10</code></td><td></td></tr><tr><td>api.startupProbe.grpc.port</td><td>int</td><td><code>8000</code></td><td></td></tr><tr><td>api.startupProbe.periodSeconds</td><td>int</td><td><code>2</code></td><td></td></tr><tr><td>api.tolerations</td><td>list</td><td><code>[]</code></td><td></td></tr><tr><td>api.volumeMounts</td><td>list</td><td><code>[]</code></td><td>Additional volumeMounts on the output Deployment definition.</td></tr><tr><td>api.volumes</td><td>list</td><td><code>[]</code></td><td>Additional volumes on the output Deployment definition.</td></tr><tr><td>dashboard.affinity</td><td>object</td><td><code>{}</code></td><td></td></tr><tr><td>dashboard.enabled</td><td>bool</td><td><code>true</code></td><td></td></tr><tr><td>dashboard.fullnameOverride</td><td>string</td><td><code>&quot;&quot;</code></td><td>full name override</td></tr><tr><td>dashboard.image.pullPolicy</td><td>string</td><td><code>&quot;IfNotPresent&quot;</code></td><td>pull policy</td></tr><tr><td>dashboard.image.repository</td><td>string</td><td><code>&quot;ghcr.io/onelitefeathernet/feedback-fusion-dashboard&quot;</code></td><td>image repository</td></tr><tr><td>dashboard.image.tag</td><td>string</td><td><code>&quot;&quot;</code></td><td>Overrides the image tag whose default is the chart appVersion.</td></tr><tr><td>dashboard.imagePullSecrets</td><td>list</td><td><code>[]</code></td><td>optional pull secrets</td></tr><tr><td>dashboard.ingress.annotations</td><td>object</td><td><code>{}</code></td><td>annotations to attach to the ingress resource</td></tr><tr><td>dashboard.ingress.className</td><td>string</td><td><code>&quot;&quot;</code></td><td>which ingress class to use</td></tr><tr><td>dashboard.ingress.enabled</td><td>bool</td><td><code>false</code></td><td>wether to create the ingress</td></tr><tr><td>dashboard.ingress.hosts</td><td>string</td><td><code>nil</code></td><td>hosts to listen on</td></tr><tr><td>dashboard.ingress.tls</td><td>list</td><td><code>[]</code></td><td>tls secret reference</td></tr><tr><td>dashboard.livenessProbe.httpGet.path</td><td>string</td><td><code>&quot;/&quot;</code></td><td></td></tr><tr><td>dashboard.livenessProbe.httpGet.port</td><td>int</td><td><code>3000</code></td><td></td></tr><tr><td>dashboard.livenessProbe.periodSeconds</td><td>int</td><td><code>5</code></td><td></td></tr><tr><td>dashboard.nameOverride</td><td>string</td><td><code>&quot;&quot;</code></td><td>name override</td></tr><tr><td>dashboard.nodeSelector</td><td>object</td><td><code>{}</code></td><td></td></tr><tr><td>dashboard.podAnnotations</td><td>object</td><td><code>{}</code></td><td>annotatiosn to attach to the pod</td></tr><tr><td>dashboard.podLabels</td><td>object</td><td><code>{}</code></td><td>labels to attach to the pod</td></tr><tr><td>dashboard.podSecurityContext</td><td>object</td><td><code>{}</code></td><td>the pod security context</td></tr><tr><td>dashboard.replicaCount</td><td>int</td><td><code>1</code></td><td>count of rep=licas to deploy. The dashboard is stateless so you can just increase this value.</td></tr><tr><td>dashboard.resources</td><td>object</td><td><code>{}</code></td><td>pod resources</td></tr><tr><td>dashboard.securityContext</td><td>object</td><td><code>{}</code></td><td>security context</td></tr><tr><td>dashboard.service.type</td><td>string</td><td><code>&quot;ClusterIP&quot;</code></td><td>service type</td></tr><tr><td>dashboard.serviceAccount.annotations</td><td>object</td><td><code>{}</code></td><td>Annotations to add to the service account</td></tr><tr><td>dashboard.serviceAccount.automount</td><td>bool</td><td><code>true</code></td><td>Automatically mount a ServiceAccount&#39;s API credentials?</td></tr><tr><td>dashboard.serviceAccount.create</td><td>bool</td><td><code>true</code></td><td>Specifies whether a service account should be created</td></tr><tr><td>dashboard.serviceAccount.name</td><td>string</td><td><code>&quot;&quot;</code></td><td>The name of the service account to use. If not set and create is true, a name is generated using the fullname template</td></tr><tr><td>dashboard.startupProbe.failureThreshold</td><td>int</td><td><code>10</code></td><td></td></tr><tr><td>dashboard.startupProbe.httpGet.path</td><td>string</td><td><code>&quot;/&quot;</code></td><td></td></tr><tr><td>dashboard.startupProbe.httpGet.port</td><td>int</td><td><code>3000</code></td><td></td></tr><tr><td>dashboard.startupProbe.periodSeconds</td><td>int</td><td><code>2</code></td><td></td></tr><tr><td>dashboard.tolerations</td><td>list</td><td><code>[]</code></td><td></td></tr><tr><td>dashboard.volumeMounts</td><td>list</td><td><code>[]</code></td><td>Additional volumeMounts on the output Deployment definition.</td></tr><tr><td>dashboard.volumes</td><td>list</td><td><code>[]</code></td><td>Additional volumes on the output Deployment definition.</td></tr><tr><td>feedbackFusion.config.secret</td><td>string</td><td><code>&quot;feedback-fusion-config&quot;</code></td><td>the secret containing the config.yaml For all configuration options see <a href="https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/configuration/server" target="_blank" rel="noreferrer">https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/configuration/server</a></td></tr><tr><td>feedbackFusion.dashboard.config.secret</td><td>string</td><td><code>&quot;feedback-fusion-dashboard-config&quot;</code></td><td>the secret containing the dashboard config For all configuration options see <a href="https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/configuration/dashboard" target="_blank" rel="noreferrer">https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/configuration/dashboard</a></td></tr><tr><td>feedbackFusion.log</td><td>string</td><td><code>&quot;INFO&quot;</code></td><td>see <a href="https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/observability/logging.html" target="_blank" rel="noreferrer">https://onelitefeathernet.github.io/feedback-fusion/nightly/docs/observability/logging.html</a></td></tr></tbody></table><hr><p>Autogenerated from chart metadata using <a href="https://github.com/norwoodj/helm-docs/releases/v1.14.2" target="_blank" rel="noreferrer">helm-docs v1.14.2</a></p>`,10)]))}const b=d(a,[["render",s]]);export{p as __pageData,b as default};
