import{_ as a,c as t,o as i,af as s}from"./chunks/framework.CCgRNBJ5.js";const n="/feedback-fusion/nightly/images/trace.png",u=JSON.parse('{"title":"Distributed Tracing","description":"","frontmatter":{},"headers":[],"relativePath":"docs/observability/tracing.md","filePath":"docs/observability/tracing.md"}'),o={name:"docs/observability/tracing.md"};function r(l,e,p,c,d,h){return i(),t("div",null,e[0]||(e[0]=[s(`<h1 id="distributed-tracing" tabindex="-1">Distributed Tracing <a class="header-anchor" href="#distributed-tracing" aria-label="Permalink to &quot;Distributed Tracing&quot;">​</a></h1><p>FeedbackFusion supports distributed tracing using the OpenTelemetry Protocol (OTLP) utilizing the <code>HeaderExtractor</code> in order to resolve trace parents.</p><p>For more information regarding the documentation checkout the <a href="/feedback-fusion/nightly/docs/configuration/server.html">Configuration</a>.</p><p>As of now we only support gRPC OTLP trace collection endpoints (:4317)</p><h2 id="example-with-jaeger-tempo" tabindex="-1">Example with Jaeger / tempo <a class="header-anchor" href="#example-with-jaeger-tempo" aria-label="Permalink to &quot;Example with Jaeger / tempo&quot;">​</a></h2><p>To configure FeedbackFusion to use Jaeger for distributed tracing, you need to set the endpoint to Jaeger&#39;s default OTLP port:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">otlp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://jaeger:4317</span></span></code></pre></div><h2 id="example-visualization-in-grafana" tabindex="-1">Example visualization in Grafana <a class="header-anchor" href="#example-visualization-in-grafana" aria-label="Permalink to &quot;Example visualization in Grafana&quot;">​</a></h2><img src="`+n+`"><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="trace-does-not-detect-parent" tabindex="-1">Trace does not detect parent <a class="header-anchor" href="#trace-does-not-detect-parent" aria-label="Permalink to &quot;Trace does not detect parent&quot;">​</a></h3><p>Please make sure the proxy / caller does actually set the <code>traceparent</code> header while calling the service.</p><p>If you use nginx-ingress you would have to set the following annotation:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nginx.ingress.kubernetes.io/configuration-snippet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    grpc_set_header &#39;traceparent&#39; $opentelemetry_context_traceparent;</span></span></code></pre></div>`,14)]))}const k=a(o,[["render",r]]);export{u as __pageData,k as default};
