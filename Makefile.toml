# Setup

[config]
skip_core_tasks = true

# lib dev

[tasks.core_build]
cwd = "./lib/core/"
command = "pnpm"
args = ["run", "tsc"]

[tasks.vue]
dependencies = ["core_build"]
cwd = "./lib/vue/"
command = "pnpm"
args = ["run", "docs:dev"]

[tasks.vue_build]
dependencies = ["core_build"]
cwd = "./lib/vue/"
command = "pnpm"
args = ["run", "build"]

# linting

[tasks.check]
command = "cargo"
args = ["check", "--bin", "main"]

[tasks.clippy]
command = "cargo"
args = [
  "clippy",
  "--features",
  "postgres",
  "--",
  "-D",
  "warnings",
]

# run oidc server for integration tests

[tasks.oidc-server-mock]
script = "docker compose -f tests/_common/oidc-mock/docker-compose.yaml up -d"

[tasks.test_build]
script = "docker build . -t feedback-fusion:test"

# Postgres
[tasks.postgres_database]
script = "docker run --name postgres -e POSTGRES_PASSWORD=password -e POSTGRES_USERNAME=postgres -p 5150:5432 -d postgres && sleep 1"

[tasks.postgres_tests]
env = { DATABASE = "POSTGRES", POSTGRES_USERNAME = "postgres", POSTGRES_PASSWORD = "password", POSTGRES_ENDPOINT = "localhost:5150", POSTGRES_DATABASE = "postgres", "OIDC_DISCOVERY_URL" = "http://localhost:5151", OIDC_CLIENT_ID = "client", OIDC_CLIENT_SECRET = "secret", OIDC_SCOPE = "api:feedback-fusion", RUST_LOG = "INFO" }
command = "cargo"
args = [
  "test",
  "--no-default-features",
  "--features",
  "postgres,test",
  "--",
  "--nocapture",
  "--test-threads=1",
]

[tasks.postgres]
dependencies = ["test_build"]
run_task = { name = [
  "oidc-server-mock",
  "postgres_database",
  "postgres_tests",
], fork = true, cleanup_task = "postgres_cleanup" }

[tasks.postgres_cleanup]
script = "docker kill postgres;docker rm postgres;docker kill oidc-server-mock;docker rm oidc-server-mock"

# run all tests

[tasks.test]
run_task = { name = ["postgres"] }
