# Setup

[config]
skip_core_tasks = true

# lib dev

[tasks.core_generate]
cwd = "./lib/src/"
command = "npx"
args = [
  "protoc",
  "--ts_out",
  ".",
  "--ts_opt",
  "server_none",
  "--proto_path",
  "../../proto",
  "../../proto/feedback-fusion-v1.proto",
]

# linting

[tasks.check]
command = "cargo"
args = ["check", "--features", "all-databases"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--features", "all-databases", "--", "-D", "warnings"]

# run oidc server for integration tests
[tasks.oidc-server-mock]
script = "docker compose -f tests/_common/oidc-mock/docker-compose.yaml up -d && sleep 5 && curl -s -o /dev/null http://localhost:5151/.well-known/openid-configuration"

# Postgres
[tasks.postgres_database]
script = "docker run --name postgres -e POSTGRES_PASSWORD=password -e POSTGRES_USERNAME=postgres -p 5150:5432 -d postgres && sleep 1"

[tasks.postgres_tests]
env = { DATABASE = "POSTGRES", POSTGRES_USERNAME = "postgres", POSTGRES_PASSWORD = "password", POSTGRES_ENDPOINT = "localhost:5150", POSTGRES_DATABASE = "postgres", "OIDC_DISCOVERY_URL" = "http://localhost:5151", OIDC_CLIENT_ID = "client", OIDC_CLIENT_SECRET = "secret", RUST_LOG = "INFO" }
command = "cargo"
args = [
  "test",
  "--no-fail-fast",
  "--no-default-features",
  "--features",
  "postgres,test",
  "--",
  "--nocapture",
  "--test-threads=1",
]

[tasks.postgres]
run_task = { name = [
  "oidc-server-mock",
  "postgres_database",
  "postgres_tests",
], fork = true, cleanup_task = "postgres_cleanup" }

[tasks.postgres_cleanup]
script = "docker rm -f postgres;docker rm -f oidc-server-mock"

# Mysql
[tasks.mysql_database]
script = '''
docker run --name mysql \
  -e MYSQL_ROOT_PASSWORD=password \
  -e MYSQL_PASSWORD=password \
  -e MYSQL_USER=username \
  -e MYSQL_DATABASE=database \
  -p 5150:3306 -d mysql
sleep 30
'''

[tasks.mysql_tests]
env = { DATABASE = "MYSQL", MYSQL_USERNAME = "root", MYSQL_PASSWORD = "password", MYSQL_ENDPOINT = "localhost:5150", MYSQL_DATABASE = "database", "OIDC_DISCOVERY_URL" = "http://localhost:5151", OIDC_CLIENT_ID = "client", OIDC_CLIENT_SECRET = "secret", RUST_LOG = "INFO" }
command = "cargo"
args = [
  "test",
  "--no-fail-fast",
  "--no-default-features",
  "--features",
  "mysql,test",
  "--",
  "--nocapture",
  "--test-threads=1",
]

[tasks.mysql]
run_task = { name = [
  "oidc-server-mock",
  "mysql_database",
  "mysql_tests",
], fork = true, cleanup_task = "mysql_cleanup" }

[tasks.mysql_cleanup]
script = "docker rm -f mysql;docker rm -f oidc-server-mock"

# Maria
[tasks.mariadb_database]
script = '''
docker run --name mariadb \
  -e MYSQL_ROOT_PASSWORD=password \
  -e MYSQL_PASSWORD=password \
  -e MYSQL_USER=username \
  -e MYSQL_DATABASE=database \
  -p 5150:3306 -d mariadb
sleep 10
'''

[tasks.mariadb]
run_task = { name = [
  "oidc-server-mock",
  "mariadb_database",
  "mysql_tests",
], fork = true, cleanup_task = "mariadb_cleanup" }

[tasks.mariadb_cleanup]
script = "docker rm -f mariadb;docker rm -f oidc-server-mock"

# Mssql
[tasks.mssql_database]
script = '''
docker run --name mssql \
  -e ACCEPT_EULA=Y \
  -e MSSQL_SA_PASSWORD=Password1 \
  -p 5150:1433 -d mcr.microsoft.com/mssql/server:2022-latest
sleep 10
'''

[tasks.mssql_tests]
env = { DATABASE = "MSSQL", MSSQL_USERNAME = "sa", MSSQL_PASSWORD = "Password1", MSSQL_ENDPOINT = "localhost:5150", MSSQL_DATABASE = "master", "OIDC_DISCOVERY_URL" = "http://localhost:5151", OIDC_CLIENT_ID = "client", OIDC_CLIENT_SECRET = "secret", RUST_LOG = "INFO" }
command = "cargo"
args = [
  "test",
  "--no-fail-fast",
  "--no-default-features",
  "--features",
  "mssql,test",
  "--",
  "--nocapture",
  "--test-threads=1",
]

[tasks.mssql]
run_task = { name = [
  "oidc-server-mock",
  "mssql_database",
  "mssql_tests",
], fork = true, cleanup_task = "mssql_cleanup" }

[tasks.mssql_cleanup]
script = "docker rm -f mssql;docker rm -f oidc-server-mock"

# run all tests

[tasks.test]
run_task = { name = ["postgres", "mysql", "mssql"], fork = true }
